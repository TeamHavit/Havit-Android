<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <data>

        <import type="android.view.View" />

        <variable
            name="state"
            type="org.sopt.havit.domain.entity.NetworkState" />

        <variable
            name="vm"
            type="org.sopt.havit.ui.web.WebViewModel" />

    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <androidx.constraintlayout.widget.ConstraintLayout
            android:id="@+id/cl_tool_bar"
            android:layout_width="match_parent"
            android:layout_height="48dp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent">

            <ImageButton
                android:id="@+id/ib_web_back"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginStart="10dp"
                android:background="@android:color/transparent"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toTopOf="parent"
                app:srcCompat="@drawable/ic_back_black" />

            <TextView
                android:id="@+id/et_web_url"
                android:layout_width="0dp"
                android:layout_height="33dp"
                android:layout_marginStart="13dp"
                android:layout_marginEnd="6dp"
                android:background="@drawable/rectangle_gray_0_radius_4"
                android:ellipsize="end"
                android:enabled="false"
                android:gravity="center_vertical"
                android:paddingHorizontal="8dp"
                android:singleLine="true"
                android:text="@{vm.contentsUrl}"
                android:textAppearance="@style/Text16Regular"
                android:textColor="@color/black"
                app:layout_constraintBottom_toBottomOf="@+id/ib_web_back"
                app:layout_constraintEnd_toStartOf="@+id/ib_web_reload"
                app:layout_constraintStart_toEndOf="@+id/ib_web_back"
                app:layout_constraintTop_toTopOf="@+id/ib_web_back" />


            <ImageButton
                android:id="@+id/ib_web_reload"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginEnd="11dp"
                android:background="@android:color/transparent"
                android:src="@drawable/ic_refresh"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintTop_toTopOf="parent" />


        </androidx.constraintlayout.widget.ConstraintLayout>

        <WebView
            android:id="@+id/wb_custom"
            android:layout_width="match_parent"
            android:layout_height="0dp"
            app:layout_constraintBottom_toTopOf="@+id/ll_web_bottom"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/cl_tool_bar" />

        <androidx.appcompat.widget.AppCompatButton
            android:id="@+id/btn_save"
            android:layout_width="120dp"
            android:layout_height="46dp"
            android:layout_marginBottom="30dp"
            android:background="@drawable/rectangle_purple_main_radius_44"
            android:text="저장하기"
            android:textAppearance="@style/Button15Medium"
            android:textColor="@color/white"
            app:layout_constraintBottom_toTopOf="@+id/ll_web_bottom"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent" />

        <LinearLayout
            android:id="@+id/ll_web_bottom"
            android:layout_width="0dp"
            android:layout_height="45dp"
            android:background="@color/white_gray"
            android:orientation="horizontal"
            android:weightSum="2"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent">

            <LinearLayout
                android:id="@+id/ll_web_share"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:layout_weight="1"
                android:gravity="center">

                <ImageView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_gravity="center"
                    android:src="@drawable/ic_share" />

            </LinearLayout>

            <LinearLayout
                android:id="@+id/ll_webview"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:layout_weight="1"
                android:background="@color/white_gray"
                android:gravity="center"
                android:orientation="horizontal">

                <ImageView
                    android:id="@+id/iv_webview_unread"
                    imgRes="@{vm.isHavit.peekContent() == true ? @drawable/ic_contents_read_2 : @drawable/ic_contents_unread}"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_gravity="center" />

                <TextView
                    android:id="@+id/tv_webview_unread"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_gravity="center"
                    android:text="@{vm.isHavit.peekContent() == true ? @string/webview_read: @string/webview_unread}"
                    android:textAppearance="@style/Sub13Regular"
                    android:textColor="@{vm.isHavit.peekContent() == true ? @color/havit_gray : @color/gray_2}" />


            </LinearLayout>
        </LinearLayout>

        <include
            android:id="@+id/layout_network_error"
            layout="@layout/layout_network_error"
            android:visibility="@{vm.isServerNetwork == state.FAIL ? View.VISIBLE : View.GONE, default = gone}"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>
